{% extends "layout.html" %}

{% block content %}

<div class="jumbotron text-center">
<h1></h1>
  <div class="container">
    <a href="/" class="Imagen3">
      <img src="/images/Imagen3.png" height="200">
    </a>
  



      <div class="btn-group" role="group" href="http://vigilant.herokuapp.com" target="_self">
        <button type="button" class="btn btn-default "  aria-haspopup="true" aria-expanded="false">
          <b>Logout </b>
          <span class="glyphicon glyphicon-log-out"></span>

        </button>
        
      </div>
    </div>
  </div>

<div class="container">

  <div class="col-md-8">
    <table>
     <tr><td>  <b><h3>EQUIPO:</h3></b>  </td></tr>
     <tr><td>  Laser Jag</td></tr>
     <tr><td>  <b><h3>CLIENTE:</h3></b></td></tr>
     <tr><td>  Antonio Suarez Rincón</td></tr>
     <tr><td>  <b><h3>UBICACIÓN:</h3></b></td></tr>
     <tr><td>  Clinica Del Norte</td></tr>
    </table>
   </div>
   <div>
    <table>
     <tr><td>  <b><h3>ESTADO DE CUENTA:</h3></b>  </td></tr>
     <tr><td>  Activo</td></tr>
     <tr><td>  <b><h3>FECHA DE ENTREGA:</h3></b></td></tr>
     <tr><td>  20/03/2019</td></tr>
    </table>
  </div>

</div>

    
    
  </div>
</div>




   <div class="row jumbotron" >
    <div class="text-center" style="color: black">
      <h2><b>DATOS</b></h2>

        <table style="width:100%"  >
        
        <tr>
          <style>
          #chartdiv {
            width: 100%;
            height: 250px;
          }

          #temperatures_chart {
            width: 100%;
            height: 250px;
          }

          #chartdivConsumo {
            width: 100%;

            height: 250px;
          }
          </style>
          <td> <div id="chartdiv"></div> <br> Temperatura: <span id="tempActual"></span> ºC</td>

          <td> <div id="temperatures_chart"></div>  </td>
        
          <td >

            <h3>Promedio Temperatura</h3>
            <br>
            <br>
            <h4> <span id="temp_promHTML"></span>  ºC</h4>
          </td>
        </tr>

        <tr>
          <td colspan="2"> <div id="chartdivConsumo"></div> </td>
          <td >
          
            <h3>Promedio Consumo</h3>
            <br>
            <br>
            <h4><span id="consumo_promHTML"></span> Kw/h</h4>
          
          </td>
        </tr>


         </table>


         <h2><b>LOG DE APERTURA</b></h2>

        <table style="width:70%" border="1" align="center"  >
        
        <tr>
          <th style="text-align:center"> Fecha y Hora</th>

          <th style="text-align:center"> Acción </th>
        </tr>

        <tr>
          <td> 22 de mayo de 2019, 20:20 </td>
          <td> APERTURA  </td>
        </tr>
        <tr>
          <td> 22 de mayo de 2019, 20:20 </td>
          <td> APERTURA  </td>
        </tr>
        <tr>
          <td> 22 de mayo de 2019, 20:20 </td>
          <td> APERTURA  </td>
        </tr>


         </table>

     </div>
      
     
      </div> <!-- row -->
      <div class="alert alert-info text-center" role="alert">
        Carlos Arroyo Therán <br>
        Cesar Chimente <br>
        Christian Celedón Barros <br>
        Alfonso Forero Sánchez <br>
        Ronald Sierra <br>
        Kelly Johana Florez Martínez<br>
        Jonathan Suarez Ardila
      </div>

  </div>
</div> <!-- row -->


<div align="center">
  <a href="http://www.pca.edu.co" target="_blank" class="PCA-Logo">
    <img src="/images/PCA-Logo.png">
    </a>

</div>



<script>

var temperatura;
var hand

am4core.ready(function() {

// Themes begin
am4core.useTheme(am4themes_dataviz);
am4core.useTheme(am4themes_animated);
// Themes end

// create chart
var chart = am4core.create("chartdiv", am4charts.GaugeChart);
chart.hiddenState.properties.opacity = 0; // this makes initial fade in effect

chart.innerRadius = -25;

var axis = chart.xAxes.push(new am4charts.ValueAxis());
axis.min = 0;
axis.max = 120;
axis.strictMinMax = true;
axis.renderer.grid.template.stroke = new am4core.InterfaceColorSet().getFor("background");
axis.renderer.grid.template.strokeOpacity = 0.3;
axis.renderer.minGridDistance = 5;

var colorSet = new am4core.ColorSet();

var range0 = axis.axisRanges.create();
range0.value = 0;
range0.endValue = 50;
range0.axisFill.fillOpacity = 1;
range0.axisFill.fill = colorSet.getIndex(0);
range0.axisFill.zIndex = - 1;

var range1 = axis.axisRanges.create();
range1.value = 50;
range1.endValue = 80;
range1.axisFill.fillOpacity = 1;
range1.axisFill.fill = colorSet.getIndex(2);
range1.axisFill.zIndex = -1;

var range2 = axis.axisRanges.create();
range2.value = 80;
range2.endValue = 120;
range2.axisFill.fillOpacity = 1;
range2.axisFill.fill = colorSet.getIndex(4);
range2.axisFill.zIndex = -1;

hand = chart.hands.push(new am4charts.ClockHand());
hand.value = 45;

function newTempData() {
  $.getJSON("/getTemperaturaData/1", function(result){
    obj = $.parseJSON(JSON.stringify(result));
      $.each(obj, function( iData, contentData ) {
        document.getElementById("tempActual").innerHTML = contentData.temperatura;
        hand.value = parseInt(contentData.temperatura);
      });
  });
  }
setInterval(newTempData, 2000);

}); 
</script>



<script>
window.onload = function () {

var temper_graph = Morris.Line({
  element: 'temperatures_chart',
  data: [],
  xkey: 'fecha',
  xLabels: 'minute',
  ykeys: ['temperatura'],
  labels: ['temperatura']
});

var consumo_graph = Morris.Line({
  element: 'chartdivConsumo',
  data: [],
  xkey: 'fecha',
  xLabels: 'minute',
  ykeys: ['consumo'],
  labels: ['consumo']
});

var temps = [], current = [], tempstart = [];
var obj;
var temp_sum, consumo_sum, temp_promedio, consumo_promedio, i;

function newDataGraph() {
  $.getJSON("/getTemperaturaData/1", function(result){
    obj = $.parseJSON(JSON.stringify(result));
    $.each(obj, function( iData, contentData ) {
  
        temps.push({ fecha: contentData.fecha, temperatura: contentData.temperatura});

        current.push({ fecha: contentData.fecha, consumo: contentData.consumo});

        temp_sum = parseInt(temp_sum) + parseInt(contentData.temperatura);
        consumo_sum = parseInt(consumo_sum) + parseInt(contentData.consumo);
        i = i+1;


        consumo_promedio = parseInt(consumo_sum) / i;
        temp_promedio = parseInt(temp_sum) / i;
    });
    temper_graph.setData(temps);
    consumo_graph.setData(current);
    document.getElementById("temp_promHTML").innerHTML = temp_promedio;
    document.getElementById("consumo_promHTML").innerHTML = consumo_promedio;
        
  });
}

setInterval(newDataGraph, 10000);

function initialDataGraph() {
$.getJSON("/getTemperaturaData/10", function(result){
    obj = $.parseJSON(JSON.stringify(result));
    $.each(obj, function( iData, contentData ) {
  
        temps.push({ fecha: contentData.fecha, temperatura: contentData.temperatura});

        current.push({ fecha: contentData.fecha, consumo: contentData.consumo});

        temp_sum = parseInt(temp_sum) + parseInt(contentData.temperatura);
        consumo_sum = parseInt(consumo_sum) + parseInt(contentData.consumo);
        i = i+1;

        alert(temp_sum);

        consumo_promedio = parseInt(consumo_sum) / i;
        temp_promedio = parseInt(temp_sum) / i;

    });
    temper_graph.setData(temps);
    consumo_graph.setData(current);
    document.getElementById("temp_promHTML").innerHTML = temp_promedio;
    document.getElementById("consumo_promHTML").innerHTML = consumo_promedio;
  });
}

initialDataGraph();


}
</script>




{% endblock %}
